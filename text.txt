AlexBear:
  Checks the markdown file with Alex - Catch insensitive, inconsiderate writing.

BootLintBear:
  Checks the code with ``bootlint`` on each file separately.

CPPCleanBear:
  Checks code with `cppclean`.

CPPLintBear:
  Checks the code with `cpplint` on each file separately.

CSSLintBear:
  Checks the code with `csslint`.

CSharpLintBear:
  Checks the code with `mcs` on each file separately.

CheckstyleBear:
  Checks the code using `checkstyle` using the Google codestyle specification.

ClangASTPrintBear:
  This bear is meant for debugging purposes relating to clang. It just prints out the whole AST for a file to the DEBUG channel.

ClangBear:
  Runs Clang over the given files and raises/fixes any upcoming issues.

ClangCloneDetectionBear:
  Checks the given code for similar functions that are probably redundant.

ClangFunctionDifferenceBear:
  Retrieves similarities for code clone detection. Those can be reused in another bear to produce results. Postprocessing may be done because small functions are less likely to be clones at the same difference value than big functions which may provide a better refactoring opportunity for the user.

CoffeeLintBear:
  Coffeelint's your files!

DartLintBear:
  Checks the code with ``dart-linter``. This bear expects dart commands to be on your ``PATH``. Please ensure /path/to/dart-sdk/bin is in your ``PATH``.

DockerfileLintBear:
  Checks the given file with dockerfile_lint.

GitCommitBear:
  Checks the current git commit message at HEAD. This bear ensures that the shortlog and body do not exceed a given line-length and that a newline lies between them.

GoImportsBear:
  Adds/Removes imports to Go code for missing imports.

GoLintBear:
  Checks the code using `golint`. This will run golint over each file seperately.

GoReturnsBear:
  Proposes corrections of Go code using gofmt.

GoVetBear:
  Checks the code using `go vet`.

GofmtBear:
  Proposes corrections of Go code using gofmt.

HTMLLintBear:
  Checks the code with `html_lint.py` on each file separately.

HaskellLintBear:
  Checks the given file with hlint.

IndentBear:
  This bear checks and corrects spacing and indentation via the well known Indent utility. It is designed to work with the C programming language but may work reasonably with syntactically similar languages.

InvalidLinkBear:
  Yields results for all invalid links in a file.

JSHintBear:
  Checks the code with jshint. This will run jshint over each file separately.

JSONFormatBear:
  Raises issues for any deviations from the pretty-printed JSON.

JuliaLintBear:
  Lints Julia code using ``Lint.jl``. https://github.com/tonyhffong/Lint.jl

KeywordBear:
  Checks the code files for given keywords.

LanguageToolBear:
  Checks the code with LanguageTool.

LatexLintBear:
  Checks the code with `chktex`.

LineCountBear:
  Counts the lines of each file.

LineLengthBear:
  Yields results for all lines longer than the given maximum line length.

MarkdownBear:
  Raises issues against style violations on markdown files.

MatlabIndentationBear:
  This bear features a simple algorithm to calculate the right indentation for Matlab/Octave code. However, it will not handle hanging indentation or conditions ranging over several lines yet.

PEP8Bear:
  Detects and fixes PEP8 incompliant code. This bear will not change functionality of the code in any way.

PHPLintBear:
  Checks the code with `php -l`. This runs it on each file separately.

ProseLintBear:
  Checks the markdown file with Alex - Catch insensitive, inconsiderate writing.

PyCommentedCodeBear:
  Detects commented out source code in Python.

PyDocStyleBear:
  Checks python docstrings.

PyImportSortBear:
  Sorts imports for python.

PyLintBear:
  Checks the code with pylint. This will run pylint over each file separately.

PyUnusedCodeBear:
  Detects unused code. This functionality is limited to: - Unneeded pass statements. - Unneeded builtin imports. (Others might have side effects.)

RLintBear:
  Checks the code with `lintr`.

RadonBear:
  Uses radon to compute complexity of a given file.

RubyLintBear:
  Checks the code with `ruby -wc` on each file separately.

SCSSLintBear:
  Checks the code with `scss-lint` on each file separately.

SQLintBear:
  Checks the given file using `sqlint`.

ShellCheckBear:
  Checks the given code with ``shellcheck``

SpaceConsistencyBear:
  Checks the space consistency for each line.

XMLBear:
  Checks the code with `xmllint`.

reSTLintBear:
  Lints reStructuredText.
